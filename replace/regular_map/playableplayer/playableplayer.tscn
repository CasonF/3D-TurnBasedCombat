[gd_scene load_steps=5 format=3 uid="uid://tqowxvpoq16k"]

[ext_resource type="PackedScene" uid="uid://unpqnv34y004" path="res://assets/allies/YBot.glb" id="1_i6t4c"]

[sub_resource type="GDScript" id="GDScript_8e5hc"]
resource_name = "playableplayerscript"
script/source = "extends CharacterBody3D


const SPEED = 5.0
const JUMP_VELOCITY = 4.5


func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir := Input.get_vector(\"ui_left\", \"ui_right\", \"ui_up\", \"ui_down\")
	var direction := (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)

	move_and_slide()
"

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_445w7"]
resource_name = "Alpha_Body_MAT"
cull_mode = 2
albedo_color = Color(1, 0.344018, 0.172081, 1)
roughness = 0.552786

[sub_resource type="BoxShape3D" id="BoxShape3D_iwxkb"]
size = Vector3(1, 2.4248, 1)

[node name="basic-player" instance=ExtResource("1_i6t4c")]
script = SubResource("GDScript_8e5hc")

[node name="GeneralSkeleton" parent="Armature" index="0"]
bones/0/position = Vector3(-1.60699e-05, 0.978864, 1.4695e-05)
bones/0/rotation = Quaternion(-0.00863847, -0.00445693, -0.00843747, 0.999917)
bones/1/rotation = Quaternion(0.102279, 0.00491141, 0.0212029, 0.994518)
bones/2/rotation = Quaternion(-0.0205155, 0.00469559, -0.00737195, 0.999751)
bones/3/rotation = Quaternion(-0.0204074, 0.0041072, -0.00775946, 0.999753)
bones/4/rotation = Quaternion(-0.0203927, 0.0555198, 0.0490986, 0.997041)
bones/5/rotation = Quaternion(0.0609376, 0.0864517, -0.0157317, 0.994266)
bones/7/rotation = Quaternion(0.485644, 0.491046, 0.51222, -0.510543)
bones/8/rotation = Quaternion(0.0806214, 0.777719, -0.622491, 0.0340435)
bones/9/rotation = Quaternion(0.13253, -0.654822, 0.0509053, 0.742329)
bones/10/rotation = Quaternion(-0.0833954, 0.700716, 0.085982, 0.703313)
bones/11/rotation = Quaternion(-0.0525923, 0.00012055, -0.0784966, 0.995526)
bones/12/rotation = Quaternion(-0.127402, 0.732569, 0.160819, 0.649036)
bones/13/rotation = Quaternion(0.0766016, 0.0373358, -0.0297666, 0.995918)
bones/14/scale = Vector3(1.00002, 1, 0.999985)
bones/15/rotation = Quaternion(0.0719518, 0.0182408, -0.0331228, 0.996691)
bones/16/rotation = Quaternion(0.161798, -0.000212267, -0.00222963, 0.986821)
bones/17/rotation = Quaternion(0.125967, 0.000215158, -0.00163189, 0.992033)
bones/19/rotation = Quaternion(0.118486, -0.0229991, -0.04708, 0.991572)
bones/20/rotation = Quaternion(0.232708, -0.000246316, -0.00583723, 0.972529)
bones/21/rotation = Quaternion(0.101242, 0.000317425, -0.000500411, 0.994862)
bones/23/rotation = Quaternion(0.0965588, -0.0512746, -0.0835336, 0.990489)
bones/24/rotation = Quaternion(0.283379, -0.00109676, -0.00278559, 0.959003)
bones/25/rotation = Quaternion(0.134329, 0.000140116, -0.00621021, 0.990917)
bones/27/rotation = Quaternion(0.205464, -0.0748475, -0.0852966, 0.972063)
bones/28/rotation = Quaternion(0.295028, -0.000161037, -0.00191641, 0.955487)
bones/29/rotation = Quaternion(0.129829, 8.57711e-05, -0.00146967, 0.991535)
bones/31/rotation = Quaternion(0.522451, -0.44197, -0.521384, -0.509771)
bones/32/rotation = Quaternion(-0.155195, 0.79716, -0.567383, 0.136113)
bones/33/rotation = Quaternion(0.0742741, 0.602695, -0.140929, 0.781909)
bones/34/rotation = Quaternion(-0.0642399, -0.564712, -0.0510655, 0.821198)
bones/35/rotation = Quaternion(-0.0525936, -0.000134021, 0.0784958, 0.995526)
bones/36/rotation = Quaternion(-0.127408, -0.732579, -0.160827, 0.649022)
bones/37/rotation = Quaternion(0.0765993, -0.0373476, 0.0297601, 0.995918)
bones/38/scale = Vector3(1.00002, 1, 0.999984)
bones/39/rotation = Quaternion(0.0719526, -0.0182467, 0.033119, 0.996691)
bones/40/rotation = Quaternion(0.161798, 0.000211433, 0.00223115, 0.986821)
bones/41/rotation = Quaternion(0.125967, -0.000215769, 0.00163186, 0.992033)
bones/43/rotation = Quaternion(0.118487, 0.0229899, 0.0470842, 0.991572)
bones/44/rotation = Quaternion(0.232708, 0.00024426, 0.00583637, 0.972529)
bones/45/rotation = Quaternion(0.101242, -0.000317425, 0.000500113, 0.994862)
bones/47/rotation = Quaternion(0.0965587, 0.0512594, 0.0835441, 0.990489)
bones/48/rotation = Quaternion(0.283378, 0.00109579, 0.00278571, 0.959004)
bones/49/rotation = Quaternion(0.13433, -0.000141457, 0.00620985, 0.990917)
bones/51/rotation = Quaternion(0.205456, 0.0748599, 0.0851764, 0.972075)
bones/52/rotation = Quaternion(0.295023, 0.000136673, 0.00225782, 0.955487)
bones/53/rotation = Quaternion(0.129833, -0.000114352, 0.00125268, 0.991535)
bones/55/rotation = Quaternion(0.085921, 0.105342, 0.986961, -0.0861909)
bones/56/rotation = Quaternion(0.00121408, 0.987668, -0.153478, -0.0308882)
bones/57/rotation = Quaternion(-0.0456521, 0.678682, -0.731281, 0.0503463)
bones/58/rotation = Quaternion(2.50247e-08, 0.998807, 0.0488378, 4.67567e-08)
bones/60/rotation = Quaternion(-0.0867203, 0.0711536, 0.993326, 0.026822)
bones/61/rotation = Quaternion(0.0124195, 0.983949, -0.176236, -0.0251224)
bones/62/rotation = Quaternion(0.0287591, 0.638591, -0.768508, -0.0277372)
bones/63/rotation = Quaternion(3.90188e-08, 0.999404, 0.0345182, 1.15245e-09)

[node name="Alpha_Surface" parent="Armature/GeneralSkeleton" index="1"]
surface_material_override/0 = SubResource("StandardMaterial3D_445w7")

[node name="CollisionShape3D" type="CollisionShape3D" parent="." index="2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.712402, 0)
shape = SubResource("BoxShape3D_iwxkb")
